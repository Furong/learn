package net.ibytes.study.spatial4j;

import org.locationtech.jts.geom.Geometry;
import org.locationtech.spatial4j.context.jts.JtsSpatialContext;
import org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory;
import org.locationtech.spatial4j.distance.DistanceUtils;
import org.locationtech.spatial4j.io.WKTReader;
import org.locationtech.spatial4j.io.WKTWriter;
import org.locationtech.spatial4j.io.jts.JtsWKTWriter;
import org.locationtech.spatial4j.shape.Circle;
import org.locationtech.spatial4j.shape.Point;
import org.locationtech.spatial4j.shape.Shape;
import org.locationtech.spatial4j.shape.impl.GeoCircle;

import java.text.ParseException;

/**
 * @author dingfurong
 * @date 2019/4/18
 * @description Spatial4j工具类
 */
public class GeoUtil {
    /**
     * 获取Context
     * @return
     */
    private static JtsSpatialContext getJtsContext(){
        return JtsSpatialContext.GEO;
    }

    /**
     * 根据经度、纬度，半径画圆形
     * @param lon
     * @param lat
     * @param circleRadius
     * @return
     */
    public static Shape createCircle(double lon, double lat, double circleRadius){
        Circle circle = getJtsContext().getShapeFactory()
                .circle(lon, lat, DistanceUtils.dist2Degrees(circleRadius / 1000, DistanceUtils.EARTH_MEAN_RADIUS_KM));
        return  circle;
    }

    public static GeoCircle createGeoCircle(Point p, double circleRadius){
        GeoCircle circle = new GeoCircle(p,DistanceUtils.dist2Degrees(circleRadius / 1000, DistanceUtils.EARTH_MEAN_RADIUS_KM),getJtsContext());
        return circle;
    }

    public static Shape getShapeFromWKT(String geom) throws ParseException {
        WKTReader reader = new WKTReader(getJtsContext(),new JtsSpatialContextFactory());
        Shape shape = reader.parse(geom);
        return shape;
    }

    public static Geometry convertToGeometry(Shape shape){
        return getJtsContext().getShapeFactory().getGeometryFrom(shape);
    }


    public static void main(String[] args){
        try {
            //WKT格式的经纬度位置
            String pointWKT = "POINT(122.106398879331 30.1212294078562)";
            String polygonWKT = "POLYGON ((122.11159747006437 30.1212294078562, 122.11158721183305 30.12155583006917, 122.1115564776237 30.12188096404279, 122.11150538873014 30.122203526621814, 122.11143414677694 30.1225222447991, 122.11134303292351 30.122835860739613, 122.11123240675464 30.123143136744513, 122.11110270486125 30.123442860135793, 122.11095443911746 30.123733848042153, 122.11078819466044 30.12401495206727, 122.1106046275811 30.124285062821983, 122.11040446233483 30.124543114302536, 122.11018848888243 30.124788088097638, 122.10995755957244 30.125019017407634, 122.10971258577733 30.125234990860037, 122.10945453429677 30.1254351561063, 122.10918442354206 30.125618723185642, 122.10890331951695 30.12578496764267, 122.10861233161059 30.125933233386455, 122.10831260821931 30.126062935279847, 122.1080053322144 30.126173561448727, 122.10769171627389 30.126264675302146, 122.10737299809661 30.12633591725535, 122.10705043551759 30.126387006148896, 122.10672530154396 30.126417740358267, 122.106398879331 30.126427998589573, 122.10607245711803 30.126417740358267, 122.1057473231444 30.126387006148896, 122.10542476056538 30.12633591725535, 122.1051060423881 30.126264675302146, 122.10479242644759 30.126173561448727, 122.10448515044268 30.126062935279847, 122.1041854270514 30.125933233386455, 122.10389443914504 30.12578496764267, 122.10361333511993 30.125618723185642, 122.10334322436522 30.1254351561063, 122.10308517288466 30.125234990860037, 122.10284019908956 30.125019017407634, 122.10260926977956 30.124788088097638, 122.10239329632716 30.124543114302536, 122.1021931310809 30.124285062821983, 122.10200956400155 30.12401495206727, 122.10184331954453 30.123733848042153, 122.10169505380074 30.123442860135793, 122.10156535190735 30.123143136744513, 122.10145472573848 30.122835860739613, 122.10136361188505 30.1225222447991, 122.10129236993185 30.122203526621814, 122.1012412810383 30.12188096404279, 122.10121054682894 30.12155583006917, 122.10120028859762 30.1212294078562, 122.10121054682894 30.120902985643234, 122.1012412810383 30.120577851669612, 122.10129236993185 30.12025528909059, 122.10136361188505 30.119936570913303, 122.10145472573848 30.11962295497279, 122.10156535190735 30.11931567896789, 122.10169505380074 30.11901595557661, 122.10184331954453 30.11872496767025, 122.10200956400155 30.118443863645133, 122.1021931310809 30.11817375289042, 122.10239329632716 30.117915701409867, 122.10260926977956 30.117670727614765, 122.10284019908956 30.11743979830477, 122.10308517288466 30.117223824852367, 122.10334322436522 30.117023659606105, 122.10361333511993 30.11684009252676, 122.10389443914504 30.116673848069734, 122.1041854270514 30.11652558232595, 122.10448515044268 30.116395880432556, 122.10479242644759 30.116285254263676, 122.1051060423881 30.116194140410258, 122.10542476056538 30.116122898457053, 122.1057473231444 30.116071809563508, 122.10607245711803 30.116041075354136, 122.106398879331 30.11603081712283, 122.10672530154396 30.116041075354136, 122.10705043551759 30.116071809563508, 122.10737299809661 30.116122898457053, 122.10769171627389 30.116194140410258, 122.1080053322144 30.116285254263676, 122.10831260821931 30.116395880432556, 122.10861233161059 30.11652558232595, 122.10890331951695 30.116673848069734, 122.10918442354206 30.11684009252676, 122.10945453429677 30.117023659606105, 122.10971258577733 30.117223824852367, 122.10995755957244 30.11743979830477, 122.11018848888243 30.117670727614765, 122.11040446233483 30.117915701409867, 122.1106046275811 30.11817375289042, 122.11078819466044 30.118443863645133, 122.11095443911746 30.11872496767025, 122.11110270486125 30.11901595557661, 122.11123240675464 30.11931567896789, 122.11134303292351 30.11962295497279, 122.11143414677694 30.119936570913303, 122.11150538873014 30.12025528909059, 122.1115564776237 30.120577851669612, 122.11158721183305 30.120902985643234, 122.11159747006437 30.1212294078562))";
            Point point = (Point)getShapeFromWKT(pointWKT);

            GeoCircle geoCircle = createGeoCircle(point,500.0);
            System.out.println(geoCircle.getBoundingBox().getWidth());

            System.out.println(convertToGeometry(geoCircle));
//            Shape shape = getShapeFromWKT(polygonWKT);
//            System.out.println(shape.getArea(getJtsContext()));
//            System.out.println(point.getX() + " " + point.getY());


        } catch (ParseException e) {
            e.printStackTrace();
        }


        //经纬度位置
        double lon = 122.106398879331;
        double lat = 30.1212294078562;
        double radis = 500.0;
        Shape circle = createCircle(lon,lat,radis);
        //求面积
        double area = circle.getArea(getJtsContext());
        System.out.println(area);
        System.out.println(convertToGeometry(circle));
    }
}
